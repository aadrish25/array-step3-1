#brute-force-approach

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        vector<int> temp;
        int n=nums.size();
        for(int i=n-k;i<n;i++)
        {
            temp.push_back(nums[i]);
        }

        for(int i=n-1;i>=k;i--)
        {
            nums[i]=nums[i-k];
        }

        int j=0;
        for(int i=0;i<k;i++)
        {
            nums[i]=temp[j];
            j++;
        }
    }
};


#optimal-approach
class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n=nums.size();
        if(k>n) k=k%n;

        reverse(nums.begin(),nums.end()); //reverse  whole array
        reverse(nums.begin(),nums.begin()+k); //reverse the first k elements
        reverse(nums.begin()+k,nums.end());// reverse remaining elements
    }
};
